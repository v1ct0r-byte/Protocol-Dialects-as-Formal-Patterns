*** Example functional composition:
*** Dialect with lingo result of XOR and Split over NSPK

sload ../modf-static
sload ../protocols/nspk
sload ../lingos/xor-lingo
sload ../lingos/split-lingo

fmod XOR+SPLIT-LINGO{D :: TRIV} is
    protecting XOR-LINGO{D} .
    protecting SPLIT-LINGO{D} * (op param to param') .                                 
endfm

view xor+split-lingo{D :: TRIV} from COMP-LINGOS to XOR+SPLIT-LINGO{D} is 
    sort D1 to D$Elt .
    sort D2 to D$Elt .
    sort D3 to List{D} .
    sort A to D$Elt .
    sort A' to Nat .

    op f to _xor_ .
    op g to _xor_ .
    op f' to split .
    op g' to merge .

    *** param and param' are provided by XOR-LINGO and SPLIT-LINGO

    op ingressArity to term 1 .
    op egressArity to term 2 .
endv

*** Dialect with XOR and MQTT over Strings
omod MAIN-STRING is
    protecting CONVERSION .
    protecting DIALECT{FUN-COMP{xor+split-lingo{String}}, NspkProtocol{String}} .

    var N : Nat .
    *** Definition of the parameter
    eq param(N) = string(random(N) rem (2 ^ 8), 10) .
    *** param' is defined in SPLIT-LINGO
endom

*** DIALECT(XOR&SPLIT,NSPK) test
frew    newDialect(< 'a : NspkPrincipal | init : nothing, 
                                         reply : nothing,
                                         close : nothing,
                                         initiates-with : 'b >) 
        newDialect(< 'b : NspkPrincipal | init : nothing, 
                                         reply : nothing,
                                         close : nothing,
                                         initiates-with : nobody >) .