*** Dialect with XOR
*** Underlying protocol: MQTT

sload ../modf-static
sload ../protocols/mqtt
sload ../lingos/xor-lingo

*** View to instantiate XOR over a trivial data type as a lingo
view xor-lingo{D :: TRIV} from PMLINGO to XOR-LINGO{D} is
    sort D1 to D$Elt .
    sort D2 to D$Elt .
    sort A to D$Elt .

    op f to _xor_ .
    op g to _xor_ .
    
    *** param is already declared by the lingo

    op ingressArity to term 1 .
    op egressArity to term 1 .
endv

*** Dialect with XOR and MQTT over BitVec{4}
omod MAIN-BITVEC4 is
    protecting DIALECT{xor-lingo{BitVec{4}}, MqttProtocol{BitVec{4}}} .

    var N : Nat .
    *** Definition of the parameter
    eq param(N) = [random(N) rem (2 ^ 4)] . 
endom

*** DIALECT(XOR,MQTT) for two clients (c1 & c2) and one broker (b)
frew    newDialect(newMqttClient('c1,'b,subscribe("temp"))) 
        newDialect(newMqttBroker('b)) 
        newDialect(newMqttClient('c2,'b,publish("temp","34"))) .

*** Dialect with XOR and MQTT over BitVec{8}
omod MAIN-BITVEC8 is
    protecting DIALECT{xor-lingo{BitVec{8}}, MqttProtocol{BitVec{8}}} .

    var N : Nat .
    *** Definition of the parameter
    eq param(N) = [random(N) rem (2 ^ 8)] . 
endom

*** DIALECT(XOR,MQTT) for two clients (c1 & c2) and one broker (b)
frew    newDialect(newMqttClient('c1,'b,subscribe("temp"))) 
        newDialect(newMqttBroker('b)) 
        newDialect(newMqttClient('c2,'b,publish("temp","34"))) .
