*** Example of Dialect with error-detecting version of XOR, using a trasnformation, over MQTT

sload ../modf-static
sload ../protocols/mqtt
sload ../lingos/xor-lingo

*** View to instantiate XOR over a trivial data type as a lingo
view xor-lingo{D :: TRIV} from PMLINGO to XOR-LINGO{D} is
    sort D1 to D$Elt .
    sort D2 to D$Elt .
    sort A to D$Elt .

    op f to _xor_ .
    op g to _xor_ .
    
    *** param is already declared by the lingo

    op ingressArity to term 1 .
    op egressArity to term 1 .
endv

*** Instantiation of the xor lingo as f-Checkable
*** EDXOR-LINGO using the parameterized transformation LINGO#
fmod EDXOR-LINGO{D :: TRIV} is
    protecting LINGO#{xor-lingo{D}} .
endfm

view edxor-lingo{D :: TRIV} from PMLINGO to EDXOR-LINGO{D} is
    sort D1 to D$Elt .
    sort D2 to D2Pair .
    sort A to APair# .

    op f to f# .
    op g to g# .

    op param to param# .

    op ingressArity to term 1 .
    op egressArity to term 1 .
endv

*** Dialect with EDXOR over MQTT
omod MAIN-BYTE is
    protecting DIALECT{edxor-lingo{BitVec{8}}, MqttProtocol{BitVec{8}}} .

    var N : Nat .
    *** Definition of the parameter of the original lingo
    eq param(N) = [random(N) rem (2 ^ 8)] . 
    *** Definition of the parameter of the trasnformed lingo
    eq param#(N) = a[param(N), param(s(N))] .
endom

*** DIALECT(EDXOR,MQTT) for two clients (c1 & c2) and one broker (b)
frew    newDialect(newMqttClient('c1,'b,subscribe("temp"))) 
        newDialect(newMqttBroker('b)) 
        newDialect(newMqttClient('c2,'b,publish("temp","34"))) .
